import "../../fastlane/Fastfile"


CONSUME_SWIFT_PROJECT =  "demo_view_swift/#{SWIFT_PROJECT}"
CONSUME_OBJC_PROJECT = "demo_view_objc/#{OBJC_PROJECT}"

# SWIFT_PROJECTS = [CREATE_SWIFT_PROJECT,CONSUME_SWIFT_PROJECT]
# OBJC_PROJECTS = [CREATE_OBJC_PROJECT,CONSUME_OBJC_PROJECT]
SWIFT_PROJECTS = [CONSUME_SWIFT_PROJECT]
OBJC_PROJECTS = [CONSUME_OBJC_PROJECT]
# DEPLOYMENT_DEMO_PROJECTS = [CREATE_SWIFT_PROJECT,CONSUME_SWIFT_PROJECT,CREATE_OBJC_PROJECT,CONSUME_OBJC_PROJECT]
DEPLOYMENT_DEMO_PROJECTS = [CONSUME_SWIFT_PROJECT,CONSUME_OBJC_PROJECT]



lane :sync_project_version_numbers do
    _version = framework_version()
    _build = framework_build()
    DEPLOYMENT_DEMO_PROJECTS.each do |project|
        increment_version_number(xcodeproj:project,version_number:_version)
        increment_build_number(xcodeproj:project,build_number:_build)
    end
end

lane :test_projects do
    OBJC_PROJECTS.each do |project| 
		xcbuild(project:project,scheme: "VPKitDemo")
    end
    
    SWIFT_PROJECTS.each do |project|
		xcbuild(project:project,scheme: "VPKitDemoSwift")
    end
end


lane :pre_deploy do
    prepare(branch: "develop")
end

lane :deploy_to_cocoapods do
    sh("pod trunk push '../VPKit.podspec' --verbose --allow-warnings")
end

lane :publish_and_deploy do
    sync_project_version_numbers	
    test_projects    
    sync_podspec_version(version:framework_version())
    git_commit(path:".", message: "deployed - v #{framework_version()}")
    add_git_tag(tag:"#{framework_version()}")
    push_to_git_remote
    deploy_to_cocoapods
end



lane :deploy do
    pre_deploy
    post_publish
end

lane :finished	 do

end

lane :temp do
    sync_podspec_version(version:framework_version())
    git_commit(path:".", message: "deployed - v #{framework_version()}")
    add_git_tag(tag:"#{framework_version()}")
    push_to_git_remote
    deploy_to_cocoapods
end

